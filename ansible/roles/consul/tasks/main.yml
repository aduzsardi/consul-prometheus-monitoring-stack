---

- name: Ensure Consul conf paths exist
  file:
    dest: "{{ item.dest }}"
    state: "{{ item.state | default('directory') }}"
    recurse: "{{ item.recurse | default('yes') }}"
  with_items:
    - dest: "{{ consul_conf_path }}"
    - dest: "{{ consul_datadir }}"

- name: Ensure Consul UI paths exist when server
  when: consul_type == 'server'
  file:
    dest: "{{ item.dest }}"
    state: "{{ item.state | default('directory') }}"
    recurse: "{{ item.recurse | default('yes') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
  with_items:
    - dest: "{{ consul_ui_path }}"

- name: Ensure Consul apt dependencies are met
  apt:
    name: "{{ item.name }}"
    update_cache: "{{ item.update_cache | default('yes') }}"
    cache_valid_time: "{{ item.cache_valid_time | default('3600') }}"
  with_items: "{{ consul_apt_deps }}"

- name: Download Consul and unzip to {{ consul_executable }}
  unarchive:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    copy: "no"
    mode: "0775"
    creates: "{{ item.creates }}"
  with_items:
    - src: "{{ consul_url }}"
      dest: "{{ consul_bin_path }}"
      creates: "{{ consul_executable }}"

- name: Download Consul UI and unzip to {{ consul_ui_path }} when server
  when: consul_type == 'server'
  unarchive:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    copy: "no"
    mode: "0775"
    creates: "{{ item.creates }}"
  with_items:
    - src: "{{ consul_ui_url }}"
      dest: "{{ consul_ui_path }}"
      creates: "{{ consul_ui_path }}/index.html"

- name: Include xenial when distro greater than 14.04
  when: ansible_distribution_version|version_compare('14.04','>')
  include: xenial.yml

- name: Include trusty when distro less than 16.04
  when: ansible_distribution_version|version_compare('16.04','<')
  include: trusty.yml

- name: Add consul services when specified
  when: consul_services_hash['services']|length > 0
  copy:
    content: "{{ consul_services_hash | to_nice_json(indent=2) }}"
    dest: "{{ consul_conf_path }}/services.json"
  notify:
    - "restart consul_{{consul_type}}"

- name: Ensure Consul in desired state and enabled
  service:
    name: "consul_{{ consul_type }}"
    state: "{{ consul_desired_state }}"
    enabled: yes
