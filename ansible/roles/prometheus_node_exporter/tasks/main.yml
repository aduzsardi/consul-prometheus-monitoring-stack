---

- name: Create Prometheus Node Exporter release directory
  file:
    dest: "{{ item }}"
    state: directory
    recurse: yes
  with_items:
    - "/opt/prometheus_node_exporter_{{ prometheus_node_exporter_version }}"

- name: Download Prometheus Node Exporter release tarball
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ prometheus_node_exporter_version }}/node_exporter-{{ prometheus_node_exporter_version }}.linux-amd64.tar.gz"
    dest: "/opt/prometheus_node_exporter_{{ prometheus_node_exporter_version }}/node_exporter-{{ prometheus_node_exporter_version }}.linux-amd64.tar.gz"

- name: Unarchive Prometheus tarball
  unarchive:
    src: "/opt/prometheus_node_exporter_{{ prometheus_node_exporter_version }}/node_exporter-{{ prometheus_node_exporter_version }}.linux-amd64.tar.gz"
    dest: "/opt/prometheus_node_exporter_{{ prometheus_node_exporter_version }}/"
    remote_src: yes
    creates: "/opt/prometheus_node_exporter_{{ prometheus_node_exporter_version }}/node_exporter-{{ prometheus_node_exporter_version }}.linux-amd64/node_exporter"

- name: Ensure 775 permissions on Prometheus Node Exporter binary
  file:
    dest: "/opt/prometheus_node_exporter_{{ prometheus_node_exporter_version }}/node_exporter-{{ prometheus_node_exporter_version }}.linux-amd64/node_exporter"
    mode: "0775"

- name: Symlink Prometheus Node Exporter binary to exec dir
  file:
    src: "/opt/prometheus_node_exporter_{{ prometheus_node_exporter_version }}/node_exporter-{{ prometheus_node_exporter_version }}.linux-amd64/node_exporter"
    dest: "/usr/local/bin/node_exporter"
    state: link

- name: Fail when expected and actual prometheus versions do not match
  shell: node_exporter -version
  register: node_exporter_version_output
  failed_when: prometheus_node_exporter_version not in node_exporter_version_output.stdout

- name: Include xenial when distro greater than 14.04
  when: ansible_distribution_version|version_compare('14.04','>')
  include: xenial.yml

- name: Include trusty when distro less than 16.04
  when: ansible_distribution_version|version_compare('16.04','<')
  include: trusty.yml
